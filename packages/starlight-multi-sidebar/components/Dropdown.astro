---
import type { Props as StarlightProps } from "@astrojs/starlight/props";
import { Icon } from "@astrojs/starlight/components";
import type { SidebarData } from "../overrides/Sidebar.astro";

interface Props {
  starlightProps: StarlightProps;
  multiSidebarData: SidebarData[];
}
---

<starlight-multi-sidebar-select>
  <label>
    <span class="sr-only">
      {Astro.props.starlightProps.labels["menuButton.accessibleLabel"]}
    </span>
    <select>
      {
        Astro.props.multiSidebarData.map(({ label, isCurrentSidebar }) => (
          <option value={label} selected={isCurrentSidebar} set:html={label} />
        ))
      }
    </select>
    <Icon name="down-caret" class="icon" />
  </label>
  <slot />
</starlight-multi-sidebar-select>

<script>
  class StarlightMultiSidebarSelect extends HTMLElement {
    constructor() {
      super();
      const dataLabelName = "starlight-multi-sidebar-label";
      const select = this.querySelector("select");
      if (select) {
        select.addEventListener("change", (e) => {
          if (e.currentTarget instanceof HTMLSelectElement) {
            const sidebarEntries = this.querySelectorAll(
              `[data-${dataLabelName}]`
            );
            sidebarEntries.forEach((entry) => {
              if (entry instanceof HTMLDivElement) {
                entry.hidden = true;
                if (entry.dataset[dataLabelName] === select.value) {
                  entry.hidden = false;
                }
              }
            });
          }
        });
      }
    }
  }
  customElements.define(
    "starlight-multi-sidebar-select",
    StarlightMultiSidebarSelect
  );
</script>
<style>
  label {
    --sl-caret-size: 1.25rem;
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: var(--sl-color-gray-1);
  }

  label:hover {
    color: var(--sl-color-gray-2);
  }

  label:hover > select {
    border-color: var(--sl-color-gray-2);
  }

  .icon {
    position: absolute;
    top: 0;
    transform: translateY(50%);
    pointer-events: none;
    font-size: var(--sl-caret-size);
    inset-inline-end: 0.5rem;
  }

  select {
    box-shadow: var(--sl-shadow-sm);
    border: 1px solid var(--sl-color-gray-5);
    padding-block: 0.3rem;
    margin-bottom: 0.625rem;
    padding-inline: 0.5rem calc(var(--sl-caret-size) + 0.5rem);
    width: 100%;
    text-overflow: ellipsis;
    color: inherit;
    cursor: pointer;
    appearance: none;
  }
  option {
    background-color: var(--sl-color-bg-nav);
    color: var(--sl-color-gray-1);
  }
</style>
