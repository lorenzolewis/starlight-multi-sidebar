---
import type { Props } from "@astrojs/starlight/props";
import Default from "@astrojs/starlight/components/Sidebar.astro";
import { AstroError } from "astro/errors";
import {Tabs, TabItem} from "@astrojs/starlight/components"

// Styles and CSS logic derived from https://daisyui.com/components/collapse/

// This Sidebar override uses the top-level items from the Starlight sidebar config to create sidebars.

// Go through each top-level sidebar item from the Astro config to...
// 1. Validate the config is set up correctly
// 2. Create a new derived set of `Astro.props` that only contains one set of sidebar entries
// 3. Check if the current page being rendered is current page to determine if this sidebar group should be selected
const multiSidebarConfig: [string, boolean, Props][] = Astro.props.sidebar.map(
  (entry) => {
    if (entry.type !== "group") {
      throw new AstroError(
        `\`${entry.label}\` cannot be used with multiple Starlight sidebars.

  Each top-level \`sidebar\` item in the Starlight config must be either a group or autogenerated.

  See https://starlight.astro.build/guides/sidebar/#groups and https://starlight.astro.build/guides/sidebar/#autogenerated-groups`
      );
    }

    // Recursively check if a group of sidebar entries contains the current page
    const findIfIsCurrent = (
      entry: (typeof Astro.props.sidebar)[number]
    ): boolean => {
      if (entry.type === "link") {
        return entry.isCurrent;
      }
      return entry.entries.some((item) => findIfIsCurrent(item));
    };

    const isCurrentPage = findIfIsCurrent(entry);

    return [
      entry.label,
      isCurrentPage,
      { ...Astro.props, sidebar: [...entry.entries] },
    ];
  }
);

if (
  !multiSidebarConfig.some(([_label, isCurrentPage, _config]) => isCurrentPage)
) {
  multiSidebarConfig[0][1] = true;
}
---

<Tabs>
  {
    multiSidebarConfig.map(([label, isCurrentPage, config]) => (
      <TabItem {label}>
        <>
          <Default {...config}>
            <slot />
          </Default>
        </>
      </TabItem>
    ))
  }
</Tabs>

<style is:global>
  	.tab > [role='tab'] {
    padding-inline: var(--sl-nav-pad-y);
    }

  .tab > [role='tab'] {
    white-space: nowrap;
  }
</style>